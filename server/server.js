// External Dependenciesvar http = require('http');var express = require('express');var io = require('socket.io');var socket = {};// Internal Dependenciesvar settings = require('./common/config').settings;console.log("Configuration Settings:");console.log(settings);//var questionService = require('./server/services/questionService');//var playerService = require('./server/services/playerService');// Create the express route handlervar exp = express();// Configure view routescreateFileRoute('/', './client/app-answer.html', exp);createFileRoute('/questions', './client/app.question.html', exp);createFileRoute('/test', './client/index.html', exp);// Create socket io listenervar server = http.createServer(exp);io = io.listen(server);// Data storagevar tingodb = require('tingodb');var Db = tingodb().Db;var db = new Db(settings.dataPath, {});// Bootstrap the web serverserver.listen(settings.port, settings.serverName);console.log('server started: "' + settings.serverName + ':' + settings.port + '"');// NOTES:// 1. Create the package.json file// 2. From the node console type: 'npm install'// 3. Create routes using express// TODO: Move the helper methods out of herefunction createService(service, db, io) {    var svc = Object.create(service);    svc.init(db, io);    return svc;}function createFileRoute(route, path, exp){    if(!path) {        path = './client/' + route + '.html';    }        console.log('route: ' + route + ' -> ' + path);        exp.get(route, function (req, res) {         res.sendfile(path);    });    }function createDefaultRoutes(service, exp) {    var route = '/' + service.serviceName;    var routeWithId = route + '/:id';    exp.get(route, service.all);    exp.get(routeWithId, service.find);    exp.post(route, service.save);    exp.put(route, service.save);    exp.delete(routeWithId, service.remove);}